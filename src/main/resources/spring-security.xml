<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:util="http://www.springframework.org/schema/util"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security-3.0.xsd
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util-3.0.xsd">
    <http auto-config="false" use-expressions="true">
        <!-- 这段配置表明自定义的认证过滤器将在Spring Security默认的UsernamePasswordAuthenticationFilter前执行  -->
        <custom-filter ref="multipleAuthenticationProcessingFilter" before="FORM_LOGIN_FILTER"/>
        <custom-filter ref="mySecurityInterceptor" before="FILTER_SECURITY_INTERCEPTOR"/>

        <intercept-url pattern="/admin/index" access="permitAll"/>
        <intercept-url pattern="/admin/login" access="permitAll"/>
        <intercept-url pattern="/admin/manage/main" access="isAuthenticated()"/>
        <intercept-url pattern="/admin/logout" access="isAuthenticated()"/>

        <form-login login-page="/admin/index" authentication-failure-url="/admin/index?result=fail" default-target-url="/admin/manage/main" login-processing-url="/admin/login"/>
        <access-denied-handler error-page="/admin/index"/>
        <logout invalidate-session="true" logout-success-url="/admin/index?result=logout" logout-url="/admin/logout"/>
    </http>

    <authentication-manager alias="authenticationManager">
        <authentication-provider ref="adminUserAuthenticationProvider"/>
    </authentication-manager>

    <beans:bean id="multipleAuthenticationProcessingFilter" class="com.cuit.web.security.MultipleAuthenticationProcessingFilter">
        <beans:constructor-arg>
            <beans:value>/admin/login</beans:value>
        </beans:constructor-arg>
        <beans:property name="postOnly" value="true" />
        <beans:property name="passwordParameter" value="j_password" />
        <beans:property name="usernameParameter" value="j_username" />
        <beans:property name="authenticationManager" ref="authenticationManager"/>
        <beans:property name="authenticationSuccessHandler" ref="adminUserAuthenticationSuccessHandler"/>
        <beans:property name="authenticationFailureHandler" ref="adminUserAuthenticationFailHandler"/>
    </beans:bean>

    <beans:bean id="adminUserAuthenticationProvider" class="com.cuit.web.security.AdminUserAuthenticationProvider"/>
    <beans:bean id="adminUserAuthenticationSuccessHandler" class="com.cuit.web.security.AdminUserAuthenticationSuccessHandler">
        <beans:property name="adminHome" value="/admin/manage/main" />
    </beans:bean>
    <beans:bean id="adminUserAuthenticationFailHandler" class="com.cuit.web.security.AdminUserAuthenticationFailHandler">
        <beans:property name="defaultFailureUrl" value="/admin/index?result=fail" />
    </beans:bean>

    <beans:bean id="mySecurityInterceptor" class="com.cuit.web.security.MySecurityInterceptor">
        <beans:property name="authenticationManager" ref="authenticationManager" />
        <beans:property name="accessDecisionManager" ref="myAccessDecisionManager" />
        <beans:property name="securityMetadataSource" ref="mySecurityMetadataSource" />
    </beans:bean>
    <!-- 访问决策器，决定某个用户具有的角色，是否有足够的权限去访问某个资源。 --> 
    <beans:bean id="myAccessDecisionManager" class="com.cuit.web.security.MyAccessDecisionManager">
    </beans:bean>
    <!-- 资源源数据定义，将所有的资源和权限对应关系建立起来，即定义某一资源可以被哪些角色去访问。 -->
    <beans:bean id="mySecurityMetadataSource" class="com.cuit.web.security.MySecurityMetadataSource">
        <beans:constructor-arg>
            <beans:ref bean="systemManageSer"/>
        </beans:constructor-arg>
    </beans:bean>

</beans:beans>